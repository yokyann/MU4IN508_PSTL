#!/bin/sh

set 82 46 114 100 97 100 97 99 44 62 44 61 62 44 113 115 115 97 44 111 108 117 100 111 109 44 104 116 103 110 101 108 45 114 111 116 99 101 118 44 63 61 60 114 97 104 99 44 63 113 101 44 114 97 104 99 45 101 116 105 114 119 44 63 111 114 101 122 44 101 116 97 99 110 117 114 116 44 120 97 109 44 63 61 103 110 105 114 116 115 44 33 108 108 105 102 45 114 111 116 99 101 118 44 33 116 101 115 45 103 110 105 114 116 115 44 103 110 105 114 116 115 98 117 115 44 114 101 103 101 116 110 105 62 45 114 97 104 99 44 104 116 103 110 101 108 45 103 110 105 114 116 115 44 103 110 105 108 105 101 99 44 116 101 108 44 102 101 114 45 114 111 116 99 101 118 44 63 61 62 103 110 105 114 116 115 44 114 97 97 97 97 99 44 63 61 62 114 97 104 99 44 114 100 100 97 97 99 44 100 110 97 44 63 61 114 97 104 99 44 33 116 101 115 44 61 44 114 97 100 100 97 99 44 63 60 114 97 104 99 44 43 44 114 111 116 97 114 101 109 117 110 44 109 99 108 44 114 111 116 99 101 118 45 101 107 97 109 44 101 110 105 102 101 100 44 33 108 108 105 102 45 103 110 105 114 116 115 44 114 97 104 99 62 45 114 101 103 101 116 110 105 44 63 62 114 97 104 99 44 113 109 101 109 44 114 100 97 97 97 99 44 97 100 98 109 97 108 44 63 110 97 101 108 111 111 98 44 114 97 97 100 100 99 44 63 61 60 103 110 105 114 116 115 44 63 101 118 105 116 105 115 111 112 44 103 110 105 114 116 115 45 101 107 97 109 44 114 97 100 97 97 99 44 114 111 116 97 110 105 109 111 110 101 100 44 33 114 100 99 45 116 101 115 44 114 97 97 100 97 99 44 114 97 97 97 100 99 44 114 100 100 97 100 99 44 114 111 44 102 105 44 101 116 111 117 113 44 110 105 109 44 114 111 111 108 102 44 63 101 118 105 116 97 103 101 110 44 33 116 101 115 45 114 111 116 99 101 118 44 121 112 111 99 45 103 110 105 114 116 115 44 100 110 117 111 114 44 114 97 100 100 100 99 44 110 105 103 101 98 44 114 97 100 97 100 99 44 61 60 44 100 110 111 99 44 114 100 97 100 100 99 44 114 100 97 97 100 99 44 114 100 100 100 100 99 44 100 110 101 112 112 97 45 103 110 105 114 116 115 44 42 44 63 100 100 111 44 63 60 103 110 105 114 116 115 44 112 97 109 44 118 109 101 109 44 63 62 103 110 105 114 116 115 44 116 115 105 108 62 45 114 111 116 99 101 118 44 116 112 120 101 44 103 110 105 114 116 115 62 45 114 101 98 109 117 110 44 101 115 114 101 118 101 114 44 33 114 97 99 45 116 101 115 44 102 101 114 45 103 110 105 114 116 115 44 114 101 100 110 105 97 109 101 114 44 99 111 115 115 97 44 114 101 98 109 117 110 62 45 103 110 105 114 116 115 44 108 97 118 101 44 114 101 98 109 101 109 44 118 115 115 97 44 63 110 101 118 101 44 104 99 97 101 45 114 111 102 44 100 99 103 44 108 111 98 109 121 115 62 45 103 110 105 114 116 115 44 99 99 47 108 108 97 99 44 103 110 105 114 116 115 62 45 108 111 98 109 121 115 44 114 97 97 99 44 45 44 114 97 100 99 44 114 97 97 100 99 44 114 97 97 97 99 44 114 100 100 100 97 99 44 101 110 105 108 119 101 110 44 114 100 97 100 99 44 114 100 97 97 99 44 102 101 114 45 116 115 105 108 44 114 97 100 97 99 44 114 97 100 100 99 44 114 100 100 100 99 44 63 116 99 101 106 98 111 45 102 111 101 44 108 112 101 114 44 114 111 114 114 101 44 114 111 116 99 101 118 62 45 116 115 105 108 44 100 110 101 112 112 97 44 63 101 114 117 100 101 99 111 114 112 44 115 98 97 44 63 108 108 117 110 44 121 97 108 112 115 105 100 44 101 116 105 114 119 44 104 116 103 110 101 108 44 63 108 111 98 109 121 115 44 100 97 101 114 44 116 110 101 105 116 111 117 113 44 114 97 104 99 45 107 101 101 112 44 63 108 97 117 113 101 44 63 114 111 116 99 101 118 44 114 100 100 97 99 44 103 110 105 114 116 115 62 45 116 115 105 108 44 116 111 110 44 44 116 115 105 108 62 45 103 110 105 114 116 115 44 44 63 103 110 105 114 116 115 44 60 44 44 63 114 101 103 101 116 110 105 44 114 100 100 99 44 44 44 44 44 44 114 100 97 99 44 44 44 114 97 104 99 45 100 97 101 114 44 44 63 114 105 97 112 44 44 115 110 111 99 44 114 97 99 44 114 100 99 44 44 63 118 113 101 44 44 44 44 44 59 57 37 64 77 88 35 90 53 39 106 37 33 85 51 94 122 33 85 51 105 36 93 36 56 85 51 89 84 65 57 37 64 90 45 64 89 75 97 64 89 76 105 85 63 64 89 76 96 121 123 33 47 57 36 105 38 105 85 59 121 93 37 57 37 64 90 45 64 89 75 90 60 94 39 105 36 126 90 38 94 89 72 64 89 84 60 118 67 118 82 51 121 93 60 55 35 89 85 53 94 122 33 85 53 56 84 77 105 38 58 72 105 85 62 97 105 38 107 107 122 33 85 62 58 107 119 39 107 33 84 79 39 95 44 89 84 79 97 65 95 66 94 126 69 94 123 33 84 62 39 94 56 84 62 89 84 56 108 98 65 96 94 39 96 126 63 95 66 95 126 69 95 124 33 84 70 56 84 76 96 94 89 84 62 107 97 95 65 97 66 96 49 89 84 70 100 65 98 67 97 105 36 66 96 94 126 69 95 124 33 85 54 35 96 107 110 56 62 94 126 105 36 35 96 107 110 56 62 94 126 105 36 35 96 107 110 56 62 94 126 105 36 35 96 107 110 56 62 94 126 89 84 57 85 94 126 63 119 41 79 94 126 63 107 82 94 126 89 84 57 94 122 33 85 47 35 89 85 54 97 95 108 123 33 84 76 35 97 95 107 35 107 95 107 126 63 105 85 62 95 123 33 84 55 49 98 49 58 89 84 55 102 65 100 98 119 41 107 126 69 65 97 66 96 94 124 33 84 66 49 89 84 55 58 104 45 119 54 107 49 89 84 55 102 126 63 105 85 62 102 100 67 97 97 97 94 125 40 33 84 75 44 105 38 94 122 33 84 78 44 89 84 75 96 94 123 33 84 72 44 89 84 78 98 96 94 124 33 84 59 44 89 84 72 99 97 95 119 83 46 124 33 49 35 98 96 110 56 84 66 102 67 105 38 67 98 119 85 60 97 119 85 60 96 56 84 70 67 101 97 95 96 126 89 73 95 65 96 49 99 105 36 49 99 89 84 59 67 80 100 120 80 67 65 74 99 119 83 37 66 74 97 49 99 67 65 74 98 119 83 37 126 63 66 74 98 119 85 61 126 69 65 97 95 126 63 120 80 94 49 99 105 36 49 99 77 94 49 99 77 89 84 72 89 84 59 67 80 103 119 83 47 119 85 60 119 85 60 89 84 75 89 84 78 96 119 85 60 119 84 35 126 69 80 98 74 97 126 69 65 97 95 126 63 119 83 47 94 49 99 105 37 49 99 77 94 49 99 77 89 84 59 105 36 67 80 100 119 83 75 94 126 69 80 98 74 97 126 69 65 97 95 126 63 119 83 75 94 56 84 66 102 80 100 74 96 66 95 96 66 74 96 126 63 119 84 35 94 56 84 55 99 65 97 95 126 63 119 83 37 94 35 89 84 76 101 119 84 65 35 100 126 89 77 98 89 84 77 105 38 58 89 84 55 105 85 62 80 101 89 84 79 67 67 102 105 36 105 36 97 107 89 74 95 110 74 96 126 63 119 83 59 94 49 58 72 103 90 46 101 99 72 102 89 67 100 98 111 74 97 95 126 63 119 83 46 94 49 89 85 47 100 89 84 62 108 98 74 98 89 67 97 95 126 77 63 119 83 65 95 56 84 66 102 67 105 38 67 98 119 85 60 97 119 85 60 96 56 84 70 67 101 97 95 96 126 89 73 95 65 96 49 99 105 36 49 99 89 84 59 67 80 100 120 80 67 65 74 99 119 83 37 66 74 97 49 99 67 65 74 98 119 83 37 126 63 66 74 98 119 85 61 126 69 65 97 95 126 63 120 80 94 49 99 105 36 49 99 77 94 49 99 77 89 84 72 89 84 59 67 80 103 119 83 47 119 85 60 119 85 60 89 84 75 89 84 78 96 119 85 60 119 84 35 126 69 80 98 74 97 126 69 65 97 95 126 63 119 83 47 94 49 99 105 37 49 99 77 94 49 99 77 89 84 59 105 36 67 80 100 119 83 75 94 126 69 80 98 74 97 126 69 65 97 95 126 63 119 83 75 94 56 84 66 102 80 100 74 96 66 95 96 66 74 96 126 63 119 84 35 94 56 84 55 99 65 97 95 126 63 119 83 37 94 35 89 84 76 101 119 84 65 35 100 126 89 77 98 89 84 77 105 38 58 89 84 55 105 85 62 80 101 89 84 79 67 67 102 105 36 105 36 97 107 89 74 95 110 74 96 126 63 119 83 59 94 49 58 72 103 90 46 101 99 72 102 89 67 100 98 111 74 97 95 126 63 119 83 46 94 49 89 85 47 100 89 84 62 108 98 74 98 89 67 97 95 126 77 94 126 94 63 119 83 73 94 35 99 74 97 110 126 63 119 83 45 94 66 95 126 69 95 35 98 89 84 62 107 96 96 109 126 89 73 95 124 33 84 60 53 95 64 76 94 123 93 45 53 117 121 33 84 46 47 53 94 126 81 94 122 33 64 39 105 36 56 64 97 65 95 64 76 94 56 64 97 65 95 64 76 94 64 76 118 83 35 126 77 63 118 83 35 95 56 64 97 65 95 64 76 94 56 64 97 65 95 64 76 94 64 76 118 83 35 126 77 94 126 94 63 118 69 94 56 64 97 65 95 64 76 118 83 59 64 76 118 83 35 126 63 116 94 56 64 97 65 95 64 76 118 83 57 64 76 118 83 35 126 63 118 48 94 56 64 97 65 95 64 76 118 83 53 64 76 118 83 35 126 63 117 94 56 64 97 65 95 64 76 94 126 89 65 96 66 94 126 69 94 123 33 85 36 39 105 36 39 105 36 56 85 36 65 94 64 89 75 66 94 126 69 94 64 76 118 67 126 69 94 122 33 76 56 76 90 67 94 56 84 60 118 83 55 118 70 126 89 79 94 56 75 90 69 94 64 76 118 70 126 89 68 94 56 64 105 36 86 94 126 84 94 56 76 90 52 94 126 89 73 94 53 118 76 64 89 85 36 65 94 64 89 75 66 94 64 76 118 75 126 69 94 56 84 60 118 76 118 75 126 89 77 94 56 84 60 118 83 59 118 70 126 63 105 37 94 56 84 60 118 83 45 118 70 126 89 65 94 122 33 75 56 76 94 53 118 69 64 87 105 37 86 94 64 76 118 69 126 84 94 122 33 85 38 56 85 38 56 84 68 126 63 117 94 39 94 126 73 107 94 71 121 33 84 68 56 84 68 64 71 39 94 56 85 38 126 63 118 82 48 94 126 73 95 118 67 39 105 85 58 126 90 38 94 89 70 121 33 84 58 56 84 58 67 96 94 56 84 58 67 97 94 56 84 58 67 97 116 126 63 118 83 59 94 56 84 58 67 97 118 48 126 63 118 83 57 94 56 84 58 67 97 117 126 63 118 83 53 94 71 126 63 118 83 35 94 57 66 95 126 63 118 69 94 39 105 38 126 90 38 94 71 122 33 84 67 44 89 84 67 94 64 71 39 105 38 126 77 77 73 118 68 96 44 89 84 67 94 64 71 39 105 38 126 77 77 94 126 94 63 118 76 95 44 89 84 67 94 64 71 39 105 38 126 77 94 126 94 63 118 75 94 89 70 121 33 85 37 44 89 85 37 94 89 72 39 105 38 64 71 126 63 118 76 94 89 84 68 121 33 55 39 95 56 55 68 68 118 82 76 95 75 96 118 51 64 71 126 105 36 39 95 56 55 68 68 118 82 76 95 75 96 118 51 64 71 126 73 118 83 46 94 126 73 95 118 83 39 56 55 68 68 118 82 44 95 75 96 118 51 64 71 126 105 36 39 95 56 55 68 68 118 82 76 95 75 96 118 51 64 71 126 105 36 39 95 56 55 68 68 118 82 76 95 75 96 118 51 64 71 126 73 118 83 46 94 126 73 95 118 83 39 56 55 68 68 118 82 44 95 75 96 118 51 64 71 126 73 118 82 60 94 126 73 95 118 82 53 56 55 68 68 118 82 37 95 75 96 118 51 64 71 126 105 36 39 95 56 55 68 68 118 82 76 95 75 96 118 51 64 71 126 105 36 39 95 56 55 68 68 118 82 76 95 75 96 118 51 64 71 126 73 118 83 46 94 126 73 95 118 83 39 56 55 68 68 118 82 44 95 75 96 118 51 64 71 126 105 36 39 95 56 55 68 68 118 82 76 95 75 96 118 51 64 71 126 105 36 39 95 56 55 68 68 118 82 76 95 75 96 118 51 64 71 126 73 118 83 46 94 126 73 95 118 83 39 56 55 68 68 118 82 44 95 75 96 118 51 64 71 126 73 118 82 60 94 126 73 95 118 82 53 56 55 68 68 118 82 37 95 75 96 118 51 64 71 126 73 118 82 47 94 126 73 95 118 82 36 89 70 122 33 72 57 54 96 39 94 126 94 94 90 61 94 89 66 67 89 84 67 94 64 71 56 66 89 84 58 105 38 64 71 126 63 118 69 94 44 67 105 38 89 72 119 83 45 64 71 126 63 118 74 94 57 35 89 72 45 78 107 107 56 55 107 64 71 126 63 118 80 94 89 70 64 71 126 77 63 118 82 77 95 57 35 89 72 45 78 107 107 56 55 107 64 71 126 63 118 80 94 89 70 64 71 126 77 94 126 94 63 118 83 63 94 39 105 37 64 71 126 63 118 83 59 94 39 105 36 64 71 126 63 118 83 45 94 89 70 64 71 126 63 118 70 94 56 85 37 64 71 126 63 118 75 94 39 94 126 73 107 94 89 84 68 121 33 70 39 94 33 85 56 94 71 121 33 85 45 39 94 33 85 56 105 85 64 39 94 126 63 105 85 58 94 33 85 56 94 122 33 48 56 85 45 94 56 85 45 89 85 50 126 63 105 85 64 94 39 94 126 63 105 85 58 94 105 85 56 121 33 85 56 105 85 64 93 38 40 105 85 58 94 122 93 53 47 55 37 89 84 65 39 95 64 89 85 55 85 99 94 64 89 84 61 82 99 94 79 79 89 84 65 105 36 122 79 79 89 84 65 105 36 126 89 79 94 122 93 56 47 39 105 36 57 56 65 96 94 64 88 36 66 95 126 69 95 126 89 79 94 123 93 72 47 39 105 38 44 90 72 65 97 95 88 36 66 95 126 69 95 126 89 79 94 123 33 84 77 35 108 96 94 123 33 79 89 84 64 108 33 84 41 47 56 84 61 89 84 63 97 79 95 94 126 89 68 94 123 33 83 66 57 35 89 84 63 107 94 122 33 83 41 47 56 85 39 98 96 82 94 126 89 68 94 124 33 83 80 47 57 42 96 82 94 126 89 68 94 123 33 84 49 47 56 56 94 126 89 68 94 122 93 69 47 56 59 94 126 89 68 94 122 93 35 35 111 89 74 95 94 122 33 68 89 84 64 111 33 83 64 47 56 84 61 89 84 63 97 79 95 94 126 105 36 47 56 84 61 89 84 63 97 79 95 94 126 81 95 126 84 94 123 33 83 40 56 66 89 80 105 38 86 94 122 93 76 56 66 89 80 86 96 86 94 123 33 85 40 56 66 97 56 85 40 67 102 90 64 98 98 96 97 95 68 108 96 126 83 97 95 125 39 33 84 39 56 85 40 105 38 98 96 94 124 33 85 35 39 107 39 105 85 58 126 69 95 39 108 56 85 35 65 98 65 96 39 108 126 73 96 94 39 105 85 58 126 73 95 95 66 96 66 94 126 69 95 126 69 94 123 33 84 80 47 56 85 35 86 96 86 94 126 105 36 47 56 85 35 86 96 86 94 126 84 95 126 84 94 123 33 83 79 56 65 90 73 96 94 123 33 83 56 56 65 90 70 96 94 123 93 70 50 89 84 80 97 95 107 123 93 73 50 107 89 84 80 96 94 123 33 84 42 40 107 89 84 80 96 94 123 33 83 54 56 66 89 84 63 118 67 94 122 33 84 40 47 56 85 39 98 96 82 94 126 84 94 124 93 64 47 57 42 96 82 94 126 84 94 123 33 84 37 47 56 56 94 126 84 94 122 33 63 47 56 59 94 126 84 94 122 33 85 42 39 105 37 39 105 36 56 85 42 65 95 126 81 94 66 94 126 69 94 122 33 66 47 35 110 89 74 95 94 126 89 85 42 94 122 33 61 89 84 64 110 33 83 63 105 39 33 84 38 105 39 33 83 77 105 84 52 33 84 48 105 83 35 33 83 62 105 84 53 33 83 70 105 60 33 83 74 105 40 33 85 41 39 95 39 105 36 39 105 36 56 85 41 68 68 118 82 37 96 75 98 117 65 95 126 73 118 82 47 94 126 73 95 118 82 36 66 94 126 69 94 123 33 85 49 56 85 41 107 94 39 105 36 126 89 77 94 122 93 61 47 39 105 36 45 95 107 126 94 89 85 49 94 56 85 49 65 94 126 63 118 80 66 94 39 105 36 126 89 77 94 86 94 126 84 94 122 33 84 73 39 94 56 84 73 95 96 126 73 97 107 67 98 94 89 84 56 68 75 117 96 96 118 82 37 89 71 117 94 123 93 67 56 66 89 84 73 105 38 94 56 66 67 89 84 73 105 38 68 96 107 118 80 126 83 107 94 122 93 68 39 94 52 95 95 126 90 74 96 90 68 89 71 109 96 90 75 95 94 39 108 126 63 107 95 123 33 83 39 105 39 33 84 44 105 39 33 84 36 105 39 33 83 43 105 39 33 83 52 39 108 122 33 83 68 105 39 33 83 67 52 95 89 84 71 90 55 96 96 95 89 78 96 89 78 94 39 107 126 63 107 95 123 33 84 69 56 84 69 95 90 63 95 95 39 95 126 63 107 94 123 93 55 56 84 69 96 94 56 84 69 95 95 126 73 95 95 89 78 96 89 78 94 123 33 84 50 56 84 56 98 94 39 94 126 63 73 107 98 73 107 96 39 107 126 63 107 94 68 75 96 97 95 89 71 96 94 123 93 63 45 75 89 71 98 96 96 94 123 33 78 39 94 45 95 107 126 83 107 94 122 33 83 44 39 95 39 94 126 83 96 94 123 33 84 43 39 94 39 95 126 83 96 94 123 93 74 56 65 90 57 94 122 93 57 40 75 89 71 109 96 109 94 122 33 83 42 56 60 107 94 122 33 83 55 56 60 95 107 122 33 84 45 40 107 94 122 33 84 52 56 65 83 96 94 123 33 83 35 56 65 83 95 95 123 33 84 53 56 60 95 95 123 33 60 47 50 96 94 126 105 36 47 50 96 94 126 81 95 126 81 94 123 33 83 72 47 40 96 94 126 105 36 47 40 96 94 126 81 95 126 81 94 123 33 71 47 56 84 71 96 94 57 36 95 105 85 65 126 63 107 95 126 105 36 47 56 84 71 96 94 57 36 95 105 85 65 126 63 107 95 126 81 95 126 81 94 123 93 75 47 52 96 94 126 105 36 47 52 96 94 126 81 95 126 81 94 123 93 50 47 45 96 94 126 105 36 47 45 96 94 126 81 95 126 81 94 123 33 83 69 47 56 84 56 96 94 126 105 36 47 56 84 56 96 94 126 81 95 126 81 94 123 33 58 56 65 89 84 57 94 122 64 89 85 46 107 105 35 33 85 57 79 105 35 33 85 43 39 94 33 85 57 67 105 85 57 94 89 85 52 94 56 85 43 79 97 95 39 94 126 89 69 96 79 94 82 95 126 69 95 123 93 54 47 56 85 43 105 85 57 94 126 84 94 122 93 52 47 56 56 94 126 89 73 94 122 33 85 52 35 109 95 105 36 122 33 73 89 84 64 109 33 85 48 39 96 56 85 48 67 99 97 96 68 108 94 126 83 95 107 124 33 84 63 56 85 48 105 38 96 94 123 93 62 39 105 36 57 62 65 97 95 39 94 126 89 69 66 95 95 66 95 126 69 95 123 33 84 51 106 58 93 58 39 105 36 57 58 65 97 95 39 94 126 63 66 95 95 66 95 126 69 95 123 93 59 39 105 36 57 59 65 96 94 39 95 126 89 69 66 96 94 126 69 95 123 33 83 61 106 71 93 71 39 105 36 57 71 65 96 94 39 95 126 63 66 96 94 126 69 95 123 33 84 74 39 94 56 84 74 68 108 96 65 94 126 83 96 107 123 33 85 39 57 65 97 89 84 74 96 94 124 93 42 43 89 84 74 96 94 123 33 85 44 39 95 56 85 44 67 97 66 95 65 94 126 69 94 123 93 66 56 85 44 105 38 94 122 33 80 39 95 44 89 80 97 65 95 66 94 126 69 94 123 33 74 39 107 56 84 56 89 74 65 95 108 126 69 94 122 33 77 40 105 38 94 122 93 77 57 39 65 94 122 33 83 38 57 39 66 94 122 93 79 57 40 65 94 122 33 83 57 57 40 66 94 122 33 83 48 57 44 65 94 122 33 83 36 57 44 66 94 122 93 78 57 48 65 94 122 33 83 49 57 48 66 94 122 33 83 71 56 67 66 94 122 33 84 54 57 41 65 94 122 33 83 50 57 41 66 94 122 33 83 76 57 43 65 94 122 33 83 53 57 43 66 94 122 33 83 60 57 47 65 94 122 33 83 78 57 47 66 94 122 93 39 56 57 65 94 122 93 40 56 57 66 94 122 93 44 57 49 65 94 122 93 48 57 49 66 94 122 93 41 51 66 94 122 93 43 57 51 65 94 122 93 47 57 51 66 94 122 93 49 42 66 94 122 93 51 43 66 94 122 93 46 56 67 65 94 122 33 67 51 65 94 122 33 57 42 65 94 122 33 51 43 65 94 122 33 83 51 47 56 85 46 96 94 126 69 94 123 93 65 47 56 84 61 96 94 126 69 94 123 33 42 47 56 56 94 126 69 94 122 33 43 47 56 59 94 126 69 94 122 33 44 35 107 96 94 123 33 46 89 84 64 107 33 69 39 105 36 39 105 36 39 105 36 39 105 36 56 69 82 97 82 95 126 89 69 79 97 79 95 126 89 69 85 97 85 95 126 89 84 57 96 39 105 36 126 63 112 85 95 126 89 84 57 95 39 94 126 94 63 96 94 123 33 84 47 105 40 33 83 58 56 65 95 39 94 126 94 63 105 37 94 122 33 65 40 105 36 94 122 33 84 64 56 84 65 39 105 36 40 98 85 94 126 89 84 57 94 122 122 33 84 71 105 71 33 52 106 75 33 45 106 50 33 84 56 105 83 69 33 50 105 60 33 85 63 58 110 108 58 107 105 38 118 67 33 85 59 58 110 118 49 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 105 38 118 83 57 118 83 54 118 83 57 118 83 57 118 83 44 118 67 118 83 44 118 83 55 118 83 64 118 83 59 118 67 118 77 118 77 118 77 33 85 64 90 50 109 107 33 85 58 90 50 108 107 33 85 65 58 110 118 50 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 58 107 105 38 118 82 37 118 67 118 83 64 118 83 41 118 67 118 83 44 118 83 43 118 83 48 118 83 61 118 83 48 118 83 43 118 67 118 77 118 77 118 77 33 39 58 108 107 108 33 41 58 108 107 109 33 54 58 108 107 110 33 84 65 58 108 107 111 33 84 57 58 108 107 112 33 59 58 108 107 113 33 56 58 108 107 114 33 62 58 108 107 115 33 84 61 58 108 107 116 33 85 46 58 108 107 117 33 85 55 58 108 107 118 46 33 40 58 108 107 118 47 33 60 58 108 107 118 48 33 83 69 58 108 107 118 49 93 50 58 108 107 118 50 93 75 58 108 107 118 51 33 71 58 108 107 118 52 33 85 50 58 108 107 118 53 33 53 58 108 107 118 54 121


_VAR()
{
if [ $_C = ${_C#R} ]; then
  _B=$_S
  while [ $_C != 0 ]; do eval _B=\$_Y$_B; _C=$((_C-1)); done
  _C=$_B
fi
}

_GETCONT()
{
_I=$_S; eval _B=\$_Y$_I _P=\$_Z$_I
while [ $_P = 0 ]; do _I=$_B; eval _B=\$_Y$_I _P=\$_Z$_I; done
}

_PUSH()
{
_H=$((_H+1)); eval _XR$_H=$_C _YR$_H=$_S _ZR$_H=0; _S=R$_H
}

_GC()
{
eval _X$_T=$_S _Y$_T=$_P

_H=$((_H+1)) _I=$_H
while [ $_I -gt 0 ]; do eval _MR$_I=0; _I=$((_I-1)); done

_C=$_F _P=0

while true; do
  eval _I=\$_M$_C
  while [ $_I = 0 ]; do
    eval _M$_C=1
    _B=$_C
    eval _C=\$_X$_C _X$_B=$_P
    _P=$_B
    if [ $_C = ${_C#R} ]; then break; fi
    eval _I=\$_M$_C
  done
  while [ $_P != 0 ]; do
    eval _I=\$_M$_P
    if [ $_I = 1 ]; then
      eval _M$_P=2
      eval _B=\$_X$_P _X$_P=$_C
      eval _C=\$_Y$_P _Y$_P=$_B
      if [ $_C != ${_C#R} ]; then break; fi
    fi
    if [ $_I = 2 ]; then
      eval _M$_P=3
      eval _B=\$_Y$_P _Y$_P=$_C
      eval _C=\$_Z$_P _Z$_P=$_B
      if [ $_C != ${_C#R} ]; then break; fi
    fi
    if [ $_I = 3 ]; then
      eval _B=\$_Z$_P _Z$_P=$_C
      _C=$_P _P=$_B
      break
    fi
  done

  if [ $_P = 0 ]; then break; fi
done

_I=1 _P=$_H
while true; do
  eval _B=\$_MR$_I
  while [ $_B != 0 ]; do _I=$((_I+1)); eval _B=\$_MR$_I; done
  eval _B=\$_MR$_H
  while [ $_B = 0 ]; do _H=$((_H-1)); eval _B=\$_MR$_H; done
  if [ $_I -ge $_H ]; then break; fi
  eval _XR$_I=\$_XR$_H _YR$_I=\$_YR$_H _ZR$_I=\$_ZR$_H _MR$_I=1 _MR$_H=0 _XR$_H=$_I
  _I=$((_I+1)) _H=$((_H-1))
done

_I=$_H _L=$((_H*10+5000))

while [ $_I != 0 ]; do
  eval _C=\$_XR$_I
  if [ $_C != ${_C#R} ]; then
    eval _B=\$_M$_C
    if [ $_B = 0 ]; then eval _XR$_I=R\$_X$_C; fi
  fi
  eval _C=\$_YR$_I
  if [ $_C != ${_C#R} ]; then
    eval _B=\$_M$_C
    if [ $_B = 0 ]; then eval _YR$_I=R\$_X$_C; fi
  fi
  eval _C=\$_ZR$_I
  if [ $_C != ${_C#R} ]; then
    eval _B=\$_M$_C
    if [ $_B = 0 ]; then eval _ZR$_I=R\$_X$_C; fi
  fi
  _I=$((_I-1))
done

eval _S=\$_X$_T _P=\$_Y$_T
}

# build #f, #t, and ()

_H=0
_H=$((_H+1)) _F=R$_H; eval _XR$_H=0 _YR$_H=0 _ZR$_H=5
_H=$((_H+1)) _T=R$_H; eval _XR$_H=0 _YR$_H=0 _ZR$_H=5 _X$_F=$_T
_H=$((_H+1)) _N=R$_H; eval _XR$_H=0 _YR$_H=0 _ZR$_H=5 _Y$_F=$_N

# build symbol table

_P=0 _C=46
while [ $_C -gt 45 ]; do
  _P=$((_P*46+_C-46)); _C=$(($1-35)); shift; if [ $_C -lt 0 ]; then _C=57; fi
done
_P=$((_P*46+_C))

_B=$_N _S=$_N _I=0 _C=0; if [ $_P = 0 ]; then _C=$1; shift; fi
while true; do
  if [ $_P -gt 0 -o $_C = 44 -o $_C = 59 ]; then
    _H=$((_H+1)); eval _XR$_H=$_S _YR$_H=$_I _ZR$_H=3; _S=R$_H # list->string
    _H=$((_H+1)); eval _XR$_H=$_F _YR$_H=$_S _ZR$_H=2; _S=R$_H # string->ui-symbol
    _H=$((_H+1)); eval _XR$_H=$_S _YR$_H=$_B _ZR$_H=0; _B=R$_H
    _S=$_N _I=0 _P=$((_P-1))
    if [ $_C = 59 ]; then break; fi
    if [ $_P -lt 1 ]; then _C=$1; shift; fi
  else
    _H=$((_H+1)); eval _XR$_H=$_C _YR$_H=$_S _ZR$_H=0; _S=R$_H
    _I=$((_I+1)) _C=$1; shift
  fi
done

# decode compacted RVM code

while true; do
  _I=0 _C=$(($1-35)); shift; if [ $_C -lt 0 ]; then _C=57; fi
  for _P in 23 33 3 13 14 7; do
    if [ $_P -gt $_C ]; then break; fi
    _I=$((_I+1)) _C=$((_C-_P))
  done
  if [ $_I = 0 ]; then
    _H=$((_H+1)); eval _XR$_H=0 _YR$_H=$_S _ZR$_H=0; _S=R$_H
  else
    if [ $_I = 5 -a $_C = 5 ]; then
      eval _P=\$_X$_S _S=\$_Y$_S
      _H=$((_H+1)); eval _XR$_H=4 _YR$_H=$_P _ZR$_H=\$_X$_S _X$_S=R$_H
      continue
    fi
    _I=$((_I-1))
  fi
  _P=$((_C-_P+3)) _L=0
  if [ $_P -lt 0 ]; then
    _P=$_C
    if [ $_I -lt 2 ]; then _L=1; fi
  else
    if [ $_P -gt 0 ]; then _P=$((_P-1)); _L=1; fi
    _C=$(($1-35)); shift; if [ $_C -lt 0 ]; then _C=57; fi
    while [ $_C -gt 45 ]; do
      _P=$((_P*46+_C-46)); _C=$(($1-35)); shift; if [ $_C -lt 0 ]; then _C=57; fi
    done
    _P=$((_P*46+_C))
  fi

  if [ $_L = 1 ]; then
    _L=$_P _P=$_B
    while [ $_L -gt 0 ]; do
      eval _P=\$_Y$_P
      _L=$((_L-1))
    done
    eval _P=\$_X$_P
  fi

  if [ $_I -gt 3 ]; then
    _H=$((_H+1)) _I=R$_H; eval _XR$_H=$_P _YR$_H=0 _ZR$_H=\$_X$_S
    _H=$((_H+1)) _P=R$_H; eval _XR$_H=$_I _YR$_H=$_N _ZR$_H=1
    eval _S=\$_Y$_S
    if [ $_S = $_N ]; then break; fi
    _I=3
  fi

  _H=$((_H+1)); eval _XR$_H=$_I _YR$_H=$_P _ZR$_H=\$_X$_S _X$_S=R$_H

done

# setup rib, false, true, and nil global variables

eval _S=\$_X$_B _C=\$_Y$_B
_H=$((_H+1)); eval _XR$_H=0 _YR$_H=$_B _ZR$_H=1 _X$_S=R$_H _S=\$_X$_C _C=\$_Y$_C
eval _X$_S=$_F _S=\$_X$_C _C=\$_Y$_C
eval _X$_S=$_T _S=\$_X$_C _C=\$_Y$_C
eval _X$_S=$_N

# build initial continuation

_H=$((_H+1)) _B=R$_H; eval _XR$_H=5 _YR$_H=0 _ZR$_H=0 _P=\$_X$_P
_H=$((_H+1)) _S=R$_H; eval _XR$_H=0 _YR$_H=0 _ZR$_H=$_B _P=\$_Z$_P

_L=$((_H*10+5000))

# RVM code interpreter main loop

while true; do
  if [ $_H -ge $_L ]; then _GC; fi
  eval _B=\$_X$_P _C=\$_Y$_P _P=\$_Z$_P
  case $_B in
    0)
      _VAR
      eval _C=\$_X$_C
      eval _B=\$_X$_C
      if [ $_B = ${_B#R} ]; then

case $_B in
  0)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    _H=$((_H+1)); eval _XR$_H=\$_X$_S _YR$_H=$_B _ZR$_H=$_C _S=\$_Y$_S; _C=R$_H
    _PUSH
    ;;
  1)
    ;;
  2)
    eval _S=\$_Y$_S
    ;;
  3)
    eval _C=\$_X$_S _S=\$_Y$_S
    eval _S=\$_Y$_S
    _PUSH
    ;;
  4)
    eval _C=\$_X$_S _S=\$_Y$_S
    _H=$((_H+1)); eval _XR$_H=\$_X$_C _YR$_H=$_S _ZR$_H=1; _C=R$_H
    _PUSH
    ;;
  5)
    eval _C=\$_X$_S _S=\$_Y$_S
    if [ $_C = ${_C#R} ]; then _C=$_F; else _C=$_T; fi
    _PUSH
    ;;
  6)
    eval _C=\$_X$_S _S=\$_Y$_S
    eval _C=\$_X$_C
    _PUSH
    ;;
  7)
    eval _C=\$_X$_S _S=\$_Y$_S
    eval _C=\$_Y$_C
    _PUSH
    ;;
  8)
    eval _C=\$_X$_S _S=\$_Y$_S
    eval _C=\$_Z$_C
    _PUSH
    ;;
  9)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    eval _X$_B=$_C
    _PUSH
    ;;
 10)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    eval _Y$_B=$_C
    _PUSH
    ;;
 11)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    eval _Z$_B=$_C
    _PUSH
    ;;
 12)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    if [ $_B = $_C ]; then _C=$_T; else _C=$_F; fi
    _PUSH
    ;;
 13)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    if [ $_B -lt $_C ]; then _C=$_T; else _C=$_F; fi
    _PUSH
    ;;
 14)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    _C=$((_B+_C))
    _PUSH
    ;;
 15)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    _C=$((_B-_C))
    _PUSH
    ;;
 16)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    _C=$((_B*_C))
    _PUSH
    ;;
 17)
    eval _C=\$_X$_S _S=\$_Y$_S; eval _B=\$_X$_S _S=\$_Y$_S
    _C=$((_B/_C))
    _PUSH
    ;;
 18)
    if [ $# = 0 ]; then
      if [ -t 0 ]; then
        set 0 `sed q | od -v -A n -t u1`
      else
        set 0 `od -v -A n -t u1`
      fi
      if [ $# = 1 ]; then set 0 -1; fi; shift
    fi
    _C=$1; shift
    _PUSH
    ;;
 19)
    eval _C=\$_X$_S
    printf \\$(($_C/64))$(($_C/8%8))$(($_C%8))
    ;;
 20)
    eval exit \$_X$_S
    ;;
esac

        if [ $_P = ${_P#R} ]; then
          _GETCONT
          eval _Y$_S=\$_X$_I
        fi
      else
        _H=$((_H+1)); eval _XR$_H=0 _YR$_H=$_C _ZR$_H=0; _C=R$_H _A=R$_H _Q=$_B
        eval _I=\$_X$_Q
        while [ $_I -gt 0 ]; do
          _H=$((_H+1)); eval _XR$_H=\$_X$_S _YR$_H=$_A _ZR$_H=0 _S=\$_Y$_S; _A=R$_H
          _I=$((_I-1))
        done
        if [ $_P = ${_P#R} ]; then
          _GETCONT
          eval _X$_C=\$_X$_I _Z$_C=$_P
        else
          eval _X$_C=$_S _Z$_C=$_P
        fi
        eval _P=\$_Z$_Q; _S=$_A
      fi
      ;;
    1)
      _VAR
      eval _X$_C=\$_X$_S _S=\$_Y$_S
      ;;
    2)
      _VAR
      eval _C=\$_X$_C
      _PUSH
      ;;
    3)
      _PUSH
      ;;
    4)
      eval _B=\$_X$_S _S=\$_Y$_S
      if [ $_B != $_F ]; then _P=$_C; fi
      ;;
    5)
      exit
      ;;
  esac
done
